name: C# CI

on:
  push:
    branches: [ main ]
    paths:
      - 'server-sdks/csharp/**'
      - '.github/workflows/csharp.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'server-sdks/csharp/**'
      - '.github/workflows/csharp.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x', '7.0.x', '8.0.x']

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET SDKs
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          7.0.x
          8.0.x
    
    - name: Set target framework
      run: |
        if [[ "${{ matrix.dotnet-version }}" == "6.0.x" ]]; then
          echo "TARGET_FRAMEWORK=net6.0" >> $GITHUB_ENV
        elif [[ "${{ matrix.dotnet-version }}" == "7.0.x" ]]; then
          echo "TARGET_FRAMEWORK=net7.0" >> $GITHUB_ENV
        elif [[ "${{ matrix.dotnet-version }}" == "8.0.x" ]]; then
          echo "TARGET_FRAMEWORK=net8.0" >> $GITHUB_ENV
        fi
    
    - name: Restore dependencies
      run: |
        cd server-sdks/csharp
        dotnet restore GroupVAN.sln
    
    - name: Build
      run: |
        cd server-sdks/csharp
        if [[ "${{ env.TARGET_FRAMEWORK }}" == "net6.0" ]] || [[ "${{ env.TARGET_FRAMEWORK }}" == "net7.0" ]] || [[ "${{ env.TARGET_FRAMEWORK }}" == "net8.0" ]]; then
          dotnet build GroupVAN.sln --no-restore --configuration Release -f ${{ env.TARGET_FRAMEWORK }}
        else
          dotnet build GroupVAN.sln --no-restore --configuration Release
        fi
    
    - name: Format check
      run: |
        cd server-sdks/csharp
        dotnet format GroupVAN.sln --verify-no-changes --no-restore
    
    - name: Test
      run: |
        cd server-sdks/csharp
        dotnet test GroupVAN.sln --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" -f ${{ env.TARGET_FRAMEWORK }}
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.dotnet-version == '8.0.x'
      with:
        file: ./server-sdks/csharp/**/coverage.cobertura.xml
        flags: csharp
        name: C# Coverage